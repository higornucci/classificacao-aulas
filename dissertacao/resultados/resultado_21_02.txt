SVM

Classes para balancear [2, 3]
(80.0, '/', 20.0)
EditedNearestNeighbours(kind_sel='all', n_jobs=2, n_neighbors=5,
            random_state=None, ratio=None, return_indices=False,
            sampling_strategy='auto')
# Tuning hyper-parameters for recall_weighted
Best parameters set found on development set:

{'clf__C': 10, 'clf__gamma': 10, 'clf__kernel': 'rbf'}

Grid scores on development set:

0.5331 (+/-0.0000) for {'clf__C': 0.01, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.5922 (+/-0.0033) for {'clf__C': 0.01, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6224 (+/-0.0023) for {'clf__C': 0.01, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6434 (+/-0.0031) for {'clf__C': 0.01, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6065 (+/-0.0018) for {'clf__C': 0.01, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.5928 (+/-0.0030) for {'clf__C': 0.1, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6143 (+/-0.0033) for {'clf__C': 0.1, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6442 (+/-0.0022) for {'clf__C': 0.1, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6714 (+/-0.0016) for {'clf__C': 0.1, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6853 (+/-0.0023) for {'clf__C': 0.1, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6114 (+/-0.0027) for {'clf__C': 1, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6307 (+/-0.0020) for {'clf__C': 1, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6619 (+/-0.0010) for {'clf__C': 1, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6886 (+/-0.0018) for {'clf__C': 1, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6969 (+/-0.0028) for {'clf__C': 1, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6197 (+/-0.0027) for {'clf__C': 10, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6443 (+/-0.0010) for {'clf__C': 10, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6763 (+/-0.0020) for {'clf__C': 10, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6972 (+/-0.0023) for {'clf__C': 10, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6998 (+/-0.0028) for {'clf__C': 10, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6324 (+/-0.0019) for {'clf__C': 100, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6545 (+/-0.0015) for {'clf__C': 100, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6864 (+/-0.0016) for {'clf__C': 100, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6992 (+/-0.0027) for {'clf__C': 100, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6989 (+/-0.0025) for {'clf__C': 100, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6439 (+/-0.0009) for {'clf__C': 1000, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6663 (+/-0.0012) for {'clf__C': 1000, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6926 (+/-0.0024) for {'clf__C': 1000, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6986 (+/-0.0025) for {'clf__C': 1000, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6978 (+/-0.0022) for {'clf__C': 1000, 'clf__gamma': 10, 'clf__kernel': 'rbf'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  164   636   208     2     0]
 [   70 55178 29467   320    13]
 [    6 23018 87393  2158    83]
 [    0   674  5789  5997    95]
 [    0     0     6     8    33]]
              precision    recall  f1-score   support

           1       0.68      0.16      0.26      1010
           2       0.69      0.65      0.67     85048
           3       0.71      0.78      0.74    112658
           4       0.71      0.48      0.57     12555
           5       0.15      0.70      0.24        47

   micro avg       0.70      0.70      0.70    211318
   macro avg       0.59      0.55      0.50    211318
weighted avg       0.70      0.70      0.70    211318


# Tuning hyper-parameters for f1_weighted
Best parameters set found on development set:

{'clf__C': 50, 'clf__gamma': 1, 'clf__kernel': 'rbf'}

Grid scores on development set:

0.6847 (+/-0.0014) for {'clf__C': 1, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6925 (+/-0.0030) for {'clf__C': 1, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6843 (+/-0.0025) for {'clf__C': 1, 'clf__gamma': 50, 'clf__kernel': 'rbf'}
0.6938 (+/-0.0023) for {'clf__C': 10, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6953 (+/-0.0019) for {'clf__C': 10, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6843 (+/-0.0025) for {'clf__C': 10, 'clf__gamma': 50, 'clf__kernel': 'rbf'}
0.6960 (+/-0.0022) for {'clf__C': 50, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6951 (+/-0.0021) for {'clf__C': 50, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6835 (+/-0.0025) for {'clf__C': 50, 'clf__gamma': 50, 'clf__kernel': 'rbf'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  173   690   141     4     2]
 [   81 56233 28302   397    35]
 [   26 24320 85819  2385   108]
 [    1   848  5486  6101   119]
 [    0     0     2     8    37]]
              precision    recall  f1-score   support

           1       0.62      0.17      0.27      1010
           2       0.69      0.66      0.67     85048
           3       0.72      0.76      0.74    112658
           4       0.69      0.49      0.57     12555
           5       0.12      0.79      0.21        47

   micro avg       0.70      0.70      0.70    211318
   macro avg       0.57      0.57      0.49    211318
weighted avg       0.70      0.70      0.70    211318



# Tuning hyper-parameters for f1_weighted

Fitting 5 folds for each of 36 candidates, totalling 180 fits
Best parameters set found on development set:

{'clf__C': 100, 'clf__gamma': 1, 'clf__kernel': 'rbf'}

Grid scores on development set:

0.3708 (+/-0.0000) for {'clf__C': 0.01, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.5597 (+/-0.0017) for {'clf__C': 0.01, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.5991 (+/-0.0020) for {'clf__C': 0.01, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6260 (+/-0.0014) for {'clf__C': 0.01, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.5487 (+/-0.0009) for {'clf__C': 0.01, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.4256 (+/-0.0023) for {'clf__C': 0.01, 'clf__gamma': 100, 'clf__kernel': 'rbf'}
0.5604 (+/-0.0016) for {'clf__C': 0.1, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.5918 (+/-0.0023) for {'clf__C': 0.1, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6301 (+/-0.0015) for {'clf__C': 0.1, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6639 (+/-0.0025) for {'clf__C': 0.1, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6755 (+/-0.0010) for {'clf__C': 0.1, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6404 (+/-0.0017) for {'clf__C': 0.1, 'clf__gamma': 100, 'clf__kernel': 'rbf'}
0.5886 (+/-0.0020) for {'clf__C': 1, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6121 (+/-0.0015) for {'clf__C': 1, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6545 (+/-0.0016) for {'clf__C': 1, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6843 (+/-0.0015) for {'clf__C': 1, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6926 (+/-0.0024) for {'clf__C': 1, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6810 (+/-0.0012) for {'clf__C': 1, 'clf__gamma': 100, 'clf__kernel': 'rbf'}
0.5993 (+/-0.0023) for {'clf__C': 10, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6327 (+/-0.0017) for {'clf__C': 10, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6711 (+/-0.0012) for {'clf__C': 10, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6945 (+/-0.0027) for {'clf__C': 10, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6953 (+/-0.0026) for {'clf__C': 10, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6807 (+/-0.0016) for {'clf__C': 10, 'clf__gamma': 100, 'clf__kernel': 'rbf'}
0.6178 (+/-0.0019) for {'clf__C': 100, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6479 (+/-0.0018) for {'clf__C': 100, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6820 (+/-0.0014) for {'clf__C': 100, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6964 (+/-0.0042) for {'clf__C': 100, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6953 (+/-0.0031) for {'clf__C': 100, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6794 (+/-0.0012) for {'clf__C': 100, 'clf__gamma': 100, 'clf__kernel': 'rbf'}
0.6323 (+/-0.0015) for {'clf__C': 1000, 'clf__gamma': 0.001, 'clf__kernel': 'rbf'}
0.6607 (+/-0.0012) for {'clf__C': 1000, 'clf__gamma': 0.01, 'clf__kernel': 'rbf'}
0.6902 (+/-0.0011) for {'clf__C': 1000, 'clf__gamma': 0.1, 'clf__kernel': 'rbf'}
0.6959 (+/-0.0042) for {'clf__C': 1000, 'clf__gamma': 1, 'clf__kernel': 'rbf'}
0.6939 (+/-0.0032) for {'clf__C': 1000, 'clf__gamma': 10, 'clf__kernel': 'rbf'}
0.6786 (+/-0.0009) for {'clf__C': 1000, 'clf__gamma': 100, 'clf__kernel': 'rbf'}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.