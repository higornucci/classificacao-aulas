classe_2 = buscar_quantidades_iguais(45407, 2)
classe_3 = buscar_quantidades_iguais(45407, 3)
classe_4 = buscar_quantidades_iguais(45407, 4)

10 fold
Usando GridSearchCV

Melhores parametros NB : MultinomialNB(alpha=15, class_prior=None, fit_prior=True)
NB: (0.5391) +/- (0.005)
Tempo de execução do NB: 10.0933 segundos
Melhores parametros DTC : DecisionTreeClassifier(class_weight='balanced', criterion='gini',
            max_depth=14, max_features=20, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best')
DTC: (0.6763) +/- (0.005)
Tempo de execução do DTC: 102.5932 segundos
Melhores parametros K-NN : KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=15, p=2,
           weights='distance')
K-NN: (0.6719) +/- (0.005)
Tempo de execução do K-NN: 11366.2450 segundos
Melhores parametros SVM : SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.01, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
SVM: (0.6495) +/- (0.005)
Tempo de execução do SVM: 1224373.9772 segundos

classe_1 = buscar_quantidades_iguais(2947, 1)
classe_2 = buscar_quantidades_iguais(5407, 2)
classe_3 = buscar_quantidades_iguais(5407, 3)
classe_4 = buscar_quantidades_iguais(5407, 4)
classe_5 = buscar_quantidades_iguais(198, 5)
5 folds
gridsearchcv

Melhores parametros NB : MultinomialNB(alpha=10, class_prior=None, fit_prior=True)
NB: (0.5065) +/- (0.010)
Tempo de execução do NB: 0.7346 segundos
Melhores parametros DTC : DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=13,
            max_features=12, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best')
DTC: (0.6263) +/- (0.018)
Tempo de execução do DTC: 6.6653 segundos
Melhores parametros K-NN : KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=5, p=2,
           weights='uniform')
K-NN: (0.6328) +/- (0.006)
Tempo de execução do K-NN: 214.0316 segundos
Melhores parametros SVM : SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
SVM: (0.6570) +/- (0.006)
Tempo de execução do SVM: 3262.5407 segundos