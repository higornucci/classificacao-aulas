classe_1 = buscar_quantidades_iguais(1500, 1)
classe_2 = buscar_quantidades_iguais(1500, 2)
classe_3 = buscar_quantidades_iguais(1500, 3)
classe_4 = buscar_quantidades_iguais(1500, 4)
classe_5 = buscar_quantidades_iguais(198, 5)

10 fold
Usando GridSearchCV

Melhores parametros NB : MultinomialNB(alpha=5, class_prior=None, fit_prior=True)
NB: (0.5117) +/- (0.023)
Tempo de execução do NB: 0.6068 segundos

Melhores parametros DTC : DecisionTreeClassifier(class_weight='balanced', criterion='gini',
            max_depth=13, max_features=12, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best')
DTC: (0.5944) +/- (0.027)
Tempo de execução do DTC: 5.2723 segundos

Melhores parametros K-NN : KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=10, p=2,
           weights='distance')
K-NN: (0.6259) +/- (0.012)
Tempo de execução do K-NN: 50.2110 segundos

Melhores parametros SVM : SVC(C=100, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=0.1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
SVM: (0.6386) +/- (0.017)
Tempo de execução do SVM: 630.9906 segundos

classe_1 = buscar_quantidades_iguais(2947, 1)
classe_2 = buscar_quantidades_iguais(2947, 2)
classe_3 = buscar_quantidades_iguais(2947, 3)
classe_4 = buscar_quantidades_iguais(2947, 4)
classe_5 = buscar_quantidades_iguais(198, 5)

Melhores parametros NB : MultinomialNB(alpha=11, class_prior=None, fit_prior=True)
NB: (0.5222) +/- (0.018)
Tempo de execução do NB: 0.8403 segundos
Melhores parametros DTC : DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=14,
            max_features=10, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best')
DTC: (0.6327) +/- (0.010)
Tempo de execução do DTC: 9.1070 segundos
Melhores parametros K-NN : KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=15, p=2,
           weights='distance')
K-NN: (0.6489) +/- (0.012)
Tempo de execução do K-NN: 149.2844 segundos
Melhores parametros SVM : SVC(C=150, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
SVM: (0.6704) +/- (0.016)
Tempo de execução do SVM: 1498.4372 segundos

classe_1 = buscar_quantidades_iguais(2947, 1)
classe_2 = buscar_quantidades_iguais(7000, 2)
classe_3 = buscar_quantidades_iguais(9000, 3)
classe_4 = buscar_quantidades_iguais(5000, 4)
classe_5 = buscar_quantidades_iguais(198, 5)

Melhores parametros NB : MultinomialNB(alpha=15, class_prior=None, fit_prior=True)
NB: (0.4879) +/- (0.008)
Tempo de execução do NB: 0.7270 segundos
Melhores parametros DTC : DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=14,
            max_features=8, max_leaf_nodes=None, min_impurity_decrease=0.0,
            min_impurity_split=None, min_samples_leaf=1,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best')
DTC: (0.5987) +/- (0.007)
Tempo de execução do DTC: 8.1059 segundos
Melhores parametros K-NN : KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=15, p=2,
           weights='distance')
K-NN: (0.6146) +/- (0.011)
Tempo de execução do K-NN: 249.4232 segundos
Melhores parametros SVM : SVC(C=150, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
SVM: (0.6349) +/- (0.012)
Tempo de execução do SVM: 2850.6458 segundos

classe_1 = buscar_quantidades_iguais(2947, 1)
classe_2 = buscar_quantidades_iguais(2947, 2)
classe_3 = buscar_quantidades_iguais(2947, 3)
classe_4 = buscar_quantidades_iguais(2947, 4)
classe_5 = buscar_quantidades_iguais(198, 5)
folds 5

Melhores parametros NB : MultinomialNB(alpha=15, class_prior=None, fit_prior=True)
NB: (0.5228) +/- (0.013)
Tempo de execução do NB: 0.5022 segundos
Melhores parametros DTC : DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=12,
            max_features=9, max_leaf_nodes=None, min_impurity_decrease=0.0,
            min_impurity_split=None, min_samples_leaf=1,
            min_samples_split=2, min_weight_fraction_leaf=0.0,
            presort=False, random_state=None, splitter='best')
DTC: (0.6244) +/- (0.010)
Tempo de execução do DTC: 4.3478 segundos
Melhores parametros K-NN : KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=10, p=2,
           weights='distance')
K-NN: (0.6484) +/- (0.004)
Tempo de execução do K-NN: 67.8510 segundos
Melhores parametros SVM : SVC(C=150, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
SVM: (0.6665) +/- (0.007)
Tempo de execução do SVM: 633.3378 segundos

classe_1 = buscar_quantidades_iguais(2947, 1)
classe_2 = buscar_quantidades_iguais(2947, 2)
classe_3 = buscar_quantidades_iguais(2947, 3)
classe_4 = buscar_quantidades_iguais(2947, 4)
classe_5 = buscar_quantidades_iguais(198, 5)
folds 10

Melhores parametros NB : MultinomialNB(alpha=11, class_prior=None, fit_prior=True)
NB: (0.5222) +/- (0.018)
Tempo de execução do NB: 0.9470 segundos
Melhores parametros DTC : DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=13,
            max_features=12, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=None,
            splitter='best')
DTC: (0.6327) +/- (0.015)
Tempo de execução do DTC: 9.2974 segundos
Melhores parametros K-NN : KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=1, n_neighbors=15, p=2,
           weights='distance')
K-NN: (0.6489) +/- (0.012)
Tempo de execução do K-NN: 160.7447 segundos
Melhores parametros SVM : SVC(C=150, cache_size=200, class_weight=None, coef0=0.0,
  decision_function_shape='ovr', degree=3, gamma=1, kernel='rbf',
  max_iter=-1, probability=False, random_state=None, shrinking=True,
  tol=0.001, verbose=False)
SVM: (0.6704) +/- (0.016)
Tempo de execução do SVM: 1560.2537 segundos

Seleção com os dados de 'rispoa' e 'maturidade' em dummy
Removido 'peso'
Colunas nehum adicionados

classe_1 = buscar_quantidades_iguais(2947, 1)
classe_2 = buscar_quantidades_iguais(2947, 2)
classe_3 = buscar_quantidades_iguais(2947, 3)
classe_4 = buscar_quantidades_iguais(2947, 4)
classe_5 = buscar_quantidades_iguais(198, 5)
folds 10

