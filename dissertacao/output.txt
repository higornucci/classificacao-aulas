(845268, 55)
MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)
EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=5,
                        sampling_strategy='auto')
# Rodando o algoritmo MNB

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[   82   500   424     3     1]
 [   23 41672 42612   727    14]
 [   11 30182 80962  1462    41]
 [    0  2123  9269  1152    11]
 [    0     0    38     3     6]]
              precision    recall  f1-score   support

           1     0.7069    0.0812    0.1456      1010
           2     0.5595    0.4900    0.5225     85048
           3     0.6073    0.7187    0.6583    112658
           4     0.3442    0.0918    0.1449     12555
           5     0.0822    0.1277    0.1000        47

    accuracy                         0.5862    211318
   macro avg     0.4600    0.3018    0.3143    211318
weighted avg     0.5728    0.5862    0.5706    211318


SMOTE(k_neighbors=5, n_jobs=3, random_state=42, sampling_strategy='auto')
# Rodando o algoritmo MNB

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  644   191    46   100    29]
 [22534 38416  9155 11436  3507]
 [23150 33281 19726 24701 11800]
 [ 1068  1668  1116  6775  1928]
 [    0     0     2     6    39]]
              precision    recall  f1-score   support

           1     0.0136    0.6376    0.0266      1010
           2     0.5223    0.4517    0.4844     85048
           3     0.6565    0.1751    0.2765    112658
           4     0.1575    0.5396    0.2438     12555
           5     0.0023    0.8298    0.0045        47

    accuracy                         0.3104    211318
   macro avg     0.2704    0.5268    0.2072    211318
weighted avg     0.5696    0.3104    0.3570    211318


SMOTEENN(enn=EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=3,
                                     sampling_strategy='auto'),
         n_jobs=None, random_state=42, sampling_strategy='auto',
         smote=SMOTE(k_neighbors=5, n_jobs=3, random_state=None,
                     sampling_strategy='auto'))
# Rodando o algoritmo MNB

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  731   101    26   118    34]
 [31795 29606  4501 15284  3862]
 [33420 25084 10328 30814 13012]
 [ 1506  1157   387  7380  2125]
 [    0     0     0     7    40]]
              precision    recall  f1-score   support

           1     0.0108    0.7238    0.0214      1010
           2     0.5292    0.3481    0.4200     85048
           3     0.6776    0.0917    0.1615    112658
           4     0.1377    0.5878    0.2231     12555
           5     0.0021    0.8511    0.0042        47

    accuracy                         0.2275    211318
   macro avg     0.2715    0.5205    0.1660    211318
weighted avg     0.5824    0.2275    0.2685    211318


RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=50, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_impurity_split=None,
                       min_samples_leaf=1, min_samples_split=6,
                       min_weight_fraction_leaf=0.0, n_estimators=250, n_jobs=3,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=5,
                        sampling_strategy='auto')
# Rodando o algoritmo RFC

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  144   690   173     3     0]
 [   39 56062 28612   330     5]
 [    1 23998 86597  2005    57]
 [    0   714  5855  5852   134]
 [    0     0     3     3    41]]
              precision    recall  f1-score   support

           1     0.7826    0.1426    0.2412      1010
           2     0.6882    0.6592    0.6734     85048
           3     0.7143    0.7687    0.7405    112658
           4     0.7143    0.4661    0.5641     12555
           5     0.1730    0.8723    0.2887        47

    accuracy                         0.7037    211318
   macro avg     0.6145    0.5818    0.5016    211318
weighted avg     0.7040    0.7037    0.7005    211318


SMOTE(k_neighbors=5, n_jobs=3, random_state=42, sampling_strategy='auto')
# Rodando o algoritmo RFC

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  569   363    66    12     0]
 [ 1714 54772 26605  1957     0]
 [  551 30403 72186  9498    20]
 [   30   582  2845  9037    61]
 [    0     1     5    10    31]]
              precision    recall  f1-score   support

           1     0.1987    0.5634    0.2938      1010
           2     0.6360    0.6440    0.6400     85048
           3     0.7097    0.6408    0.6735    112658
           4     0.4405    0.7198    0.5466     12555
           5     0.2768    0.6596    0.3899        47

    accuracy                         0.6464    211318
   macro avg     0.4523    0.6455    0.5087    211318
weighted avg     0.6615    0.6464    0.6506    211318


SMOTEENN(enn=EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=3,
                                     sampling_strategy='auto'),
         n_jobs=None, random_state=42, sampling_strategy='auto',
         smote=SMOTE(k_neighbors=5, n_jobs=3, random_state=None,
                     sampling_strategy='auto'))
# Rodando o algoritmo RFC

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  739   228    27    16     0]
 [ 3197 58475 20552  2823     1]
 [ 1265 29557 69364 12441    31]
 [   61   412  1529 10473    80]
 [    0     0     4    11    32]]
              precision    recall  f1-score   support

           1     0.1404    0.7317    0.2357      1010
           2     0.6595    0.6876    0.6732     85048
           3     0.7583    0.6157    0.6796    112658
           4     0.4065    0.8342    0.5466     12555
           5     0.2222    0.6809    0.3351        47

    accuracy                         0.6582    211318
   macro avg     0.4374    0.7100    0.4940    211318
weighted avg     0.6945    0.6582    0.6669    211318


AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=16, random_state=42)
EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=5,
                        sampling_strategy='auto')
# Rodando o algoritmo ADA

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[    0   711   298     1     0]
 [   33 49932 34775   308     0]
 [    2 35588 76399   668     1]
 [    0  1772 10168   613     2]
 [    0     2    41     3     1]]
              precision    recall  f1-score   support

           1     0.0000    0.0000    0.0000      1010
           2     0.5674    0.5871    0.5771     85048
           3     0.6279    0.6781    0.6520    112658
           4     0.3848    0.0488    0.0867     12555
           5     0.2500    0.0213    0.0392        47

    accuracy                         0.6007    211318
   macro avg     0.3660    0.2671    0.2710    211318
weighted avg     0.5860    0.6007    0.5850    211318


SMOTE(k_neighbors=5, n_jobs=3, random_state=42, sampling_strategy='auto')
# Rodando o algoritmo ADA

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  517   245   180    59     9]
 [18588 39342 20780  5888   450]
 [18240 36164 31408 23895  2951]
 [  502  2250  1609  7399   795]
 [    3     0     1     7    36]]
              precision    recall  f1-score   support

           1     0.0137    0.5119    0.0266      1010
           2     0.5044    0.4626    0.4826     85048
           3     0.5819    0.2788    0.3770    112658
           4     0.1986    0.5893    0.2971     12555
           5     0.0085    0.7660    0.0168        47

    accuracy                         0.3724    211318
   macro avg     0.2614    0.5217    0.2400    211318
weighted avg     0.5251    0.3724    0.4130    211318


SMOTEENN(enn=EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=3,
                                     sampling_strategy='auto'),
         n_jobs=None, random_state=42, sampling_strategy='auto',
         smote=SMOTE(k_neighbors=5, n_jobs=3, random_state=None,
                     sampling_strategy='auto'))
# Rodando o algoritmo ADA

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  814    75    18    99     4]
 [46624 13048  1866 23228   282]
 [50249  9704  3715 47100  1890]
 [ 1720   687   185  9164   799]
 [    3     0     1     3    40]]
              precision    recall  f1-score   support

           1     0.0082    0.8059    0.0162      1010
           2     0.5549    0.1534    0.2404     85048
           3     0.6422    0.0330    0.0627    112658
           4     0.1151    0.7299    0.1989     12555
           5     0.0133    0.8511    0.0261        47

    accuracy                         0.1267    211318
   macro avg     0.2667    0.5147    0.1089    211318
weighted avg     0.5726    0.1267    0.1421    211318


MLPClassifier(activation='tanh', alpha=0.01, batch_size='auto', beta_1=0.9,
              beta_2=0.999, early_stopping=False, epsilon=1e-08,
              hidden_layer_sizes=14, learning_rate='constant',
              learning_rate_init=0.001, max_fun=15000, max_iter=200,
              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,
              power_t=0.5, random_state=42, shuffle=True, solver='adam',
              tol=0.0001, validation_fraction=0.1, verbose=False,
              warm_start=False)
EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=5,
                        sampling_strategy='auto')
# Rodando o algoritmo MLP

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[   60   687   258     5     0]
 [   19 53268 31180   581     0]
 [    5 27846 82696  2111     0]
 [    0  1337  6907  4311     0]
 [    0     2    31    14     0]]
              precision    recall  f1-score   support

           1     0.7143    0.0594    0.1097      1010
           2     0.6407    0.6263    0.6334     85048
           3     0.6830    0.7340    0.7076    112658
           4     0.6139    0.3434    0.4404     12555
           5     0.0000    0.0000    0.0000        47

    accuracy                         0.6641    211318
   macro avg     0.5304    0.3526    0.3782    211318
weighted avg     0.6619    0.6641    0.6589    211318


SMOTE(k_neighbors=5, n_jobs=3, random_state=42, sampling_strategy='auto')
# Rodando o algoritmo MLP

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  825   112    47    25     1]
 [10772 49024 18762  6309   181]
 [ 6511 35866 46499 23025   757]
 [  239   792  1795  9419   310]
 [    0     0     2     1    44]]
              precision    recall  f1-score   support

           1     0.0450    0.8168    0.0852      1010
           2     0.5714    0.5764    0.5739     85048
           3     0.6929    0.4127    0.5173    112658
           4     0.2429    0.7502    0.3670     12555
           5     0.0340    0.9362    0.0657        47

    accuracy                         0.5007    211318
   macro avg     0.3172    0.6985    0.3218    211318
weighted avg     0.6140    0.5007    0.5290    211318


SMOTEENN(enn=EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=3,
                                     sampling_strategy='auto'),
         n_jobs=None, random_state=42, sampling_strategy='auto',
         smote=SMOTE(k_neighbors=5, n_jobs=3, random_state=None,
                     sampling_strategy='auto'))
# Rodando o algoritmo MLP

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  899    65    22    23     1]
 [16151 44190 15648  8839   220]
 [11608 31843 40939 27179  1089]
 [  392   691  1152  9963   357]
 [    0     0     0     5    42]]
              precision    recall  f1-score   support

           1     0.0309    0.8901    0.0598      1010
           2     0.5755    0.5196    0.5461     85048
           3     0.7088    0.3634    0.4805    112658
           4     0.2165    0.7935    0.3402     12555
           5     0.0246    0.8936    0.0478        47

    accuracy                         0.4544    211318
   macro avg     0.3113    0.6920    0.2949    211318
weighted avg     0.6225    0.4544    0.4964    211318


KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=None, n_neighbors=2, p=2,
                     weights='distance')
EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=5,
                        sampling_strategy='auto')
# Rodando o algoritmo K-NN

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  155   655   190     8     2]
 [   88 55545 28836   541    38]
 [   21 24606 85404  2471   156]
 [    0   872  5511  6011   161]
 [    0     0     1     6    40]]
              precision    recall  f1-score   support

           1     0.5871    0.1535    0.2433      1010
           2     0.6800    0.6531    0.6663     85048
           3     0.7120    0.7581    0.7343    112658
           4     0.6652    0.4788    0.5568     12555
           5     0.1008    0.8511    0.1802        47

    accuracy                         0.6964    211318
   macro avg     0.5490    0.5789    0.4762    211318
weighted avg     0.6956    0.6964    0.6939    211318


SMOTE(k_neighbors=5, n_jobs=3, random_state=42, sampling_strategy='auto')
# Rodando o algoritmo K-NN

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  618   308    75     9     0]
 [ 1576 56547 25201  1724     0]
 [  511 37929 66073  8125    20]
 [   22   859  3556  8059    59]
 [    0     0     4     7    36]]
              precision    recall  f1-score   support

           1     0.2266    0.6119    0.3307      1010
           2     0.5912    0.6649    0.6259     85048
           3     0.6962    0.5865    0.6366    112658
           4     0.4496    0.6419    0.5288     12555
           5     0.3130    0.7660    0.4444        47

    accuracy                         0.6215    211318
   macro avg     0.4553    0.6542    0.5133    211318
weighted avg     0.6370    0.6215    0.6244    211318


SMOTEENN(enn=EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=3,
                                     sampling_strategy='auto'),
         n_jobs=None, random_state=42, sampling_strategy='auto',
         smote=SMOTE(k_neighbors=5, n_jobs=3, random_state=None,
                     sampling_strategy='auto'))
# Rodando o algoritmo K-NN

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  781   190    23    16     0]
 [ 3663 57532 20615  3227    11]
 [ 1657 30100 67711 13134    56]
 [   75   396  1505 10497    82]
 [    0     0     1     9    37]]
              precision    recall  f1-score   support

           1     0.1265    0.7733    0.2174      1010
           2     0.6522    0.6765    0.6641     85048
           3     0.7536    0.6010    0.6687    112658
           4     0.3905    0.8361    0.5323     12555
           5     0.1989    0.7872    0.3176        47

    accuracy                         0.6462    211318
   macro avg     0.4243    0.7348    0.4800    211318
weighted avg     0.6881    0.6462    0.6565    211318


SVC(C=128, break_ties=False, cache_size=200, class_weight='balanced', coef0=0.0,
    decision_function_shape='ovr', degree=3, gamma=8, kernel='rbf', max_iter=-1,
    probability=True, random_state=42, shrinking=True, tol=0.001,
    verbose=False)
EditedNearestNeighbours(kind_sel='all', n_jobs=3, n_neighbors=5,
                        sampling_strategy='auto')
# Rodando o algoritmo SVM

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Matriz de Confusão
[[  148   484   375     3     0]
 [   46 50291 34442   233    36]
 [    1 20504 89991  2035   127]
 [    0   439  6235  5723   158]
 [    0     0     5     4    38]]
              precision    recall  f1-score   support

           1     0.7590    0.1465    0.2456      1010
           2     0.7012    0.5913    0.6416     85048
           3     0.6867    0.7988    0.7385    112658
           4     0.7156    0.4558    0.5569     12555
           5     0.1058    0.8085    0.1872        47

    accuracy                         0.6918    211318
   macro avg     0.5937    0.5602    0.4740    211318
weighted avg     0.6945    0.6918    0.6862    211318


SMOTE(k_neighbors=5, n_jobs=3, random_state=42, sampling_strategy='auto')
# Rodando o algoritmo SVM
